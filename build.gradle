apply plugin: 'war'
apply plugin: 'tomcat'

apply plugin: 'java'
apply plugin: 'eclipse'

buildscript {
	repositories {
		mavenCentral()
    	maven { url "http://download.java.net/maven/3" }
		maven { url 'http://repo.spring.io/plugins-release' }
	}

	dependencies {
		classpath 'org.gradle.api.plugins:gradle-tomcat-plugin:0.9.9'
	}
}

repositories {
    mavenCentral()
    maven { url 'http://repo.spring.io/milestone/'}
	maven { url 'http://repo.spring.io/libs-release'}
}

dependencies {

	def h2DBVersion 				= "1.4.179"
	def hibernateEMVersion 			= "4.3.5.Final"
	def hibernateJpaVersion 		= "1.0.0.Draft-16"
	def jacksonVersion 				= "2.4.1"
	def jaxbAPIVersion 				= "2.2.11"
	def jsonpathVersion 			= "0.9.1"
	def junitVersion 				= "4.+"
	def mockitoCoreVersion 			= "1.9.5"
	def mysqlDriverVersion 			= "5.1.31"
	def servletVersion 				= "3.1.0"
	def springGemfireVersion 		= "1.4.0.RELEASE"
	def springHateoasVersion  		= "0.13.0.RELEASE"
	def springJpaVersion 			= "1.6.0.RELEASE"
	def springMongoDBVersion 		= "1.5.0.RELEASE"
	def springVersion 				= "4.0.5.RELEASE"
	def springSecurityVersion 		= "3.2.4.RELEASE"
	def slf4jVersion 				= "1.7.7"
	def logbackVersion 				= "1.1.2"
	def tomcatVersion 				= "7.0.54"
	def thymeleafSpring4Version 	= "2.1.3.RELEASE"
	def validationApiVersion 		= "1.1.0.Final"
	def hibernateValidatorVersion	= "5.0.1.Final"
	
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}",
           "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat("org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}") {
		exclude group: 'org.eclipse.jdt.core.compiler', module: 'ecj'
    }
    
	compile "org.springframework:spring-core:${springVersion}"
    compile "org.springframework:spring-webmvc:${springVersion}"
    compile "org.springframework.hateoas:spring-hateoas:${springHateoasVersion}"
	compile "org.springframework.security:spring-security-web:${springSecurityVersion}"
    compile "org.springframework.security:spring-security-config:${springSecurityVersion}"
    compile "org.springframework.data:spring-data-mongodb:${springMongoDBVersion}"
    compile "org.springframework.data:spring-data-jpa:${springJpaVersion}"
    compile "org.springframework.data:spring-data-gemfire:${springGemfireVersion}"
    
    compile "javax.validation:validation-api:${validationApiVersion}"
  	compile "org.hibernate:hibernate-validator:${hibernateValidatorVersion}"
	
    providedCompile "javax.servlet:javax.servlet-api:${servletVersion}"
    
    runtime "com.fasterxml.jackson.core:jackson-core:${jacksonVersion}"
    runtime "com.fasterxml.jackson.core:jackson-databind:${jacksonVersion}"
    runtime "javax.xml.bind:jaxb-api:${jaxbAPIVersion}"
    
	compile "org.hibernate.javax.persistence:hibernate-jpa-2.1-api:${hibernateJpaVersion}"
	compile "org.hibernate:hibernate-entitymanager:${hibernateEMVersion}"
	runtime "mysql:mysql-connector-java:${mysqlDriverVersion}"

    compile "org.slf4j:slf4j-api:${slf4jVersion}"
    runtime "org.slf4j:slf4j-jdk14:${slf4jVersion}"
    compile "ch.qos.logback:logback-classic:${logbackVersion}"
    
	compile "org.thymeleaf:thymeleaf-spring4:${thymeleafSpring4Version}"
    
	testCompile "org.springframework:spring-test:${springVersion}"
    testCompile "com.jayway.jsonpath:json-path:${jsonpathVersion}"
    testCompile "com.jayway.jsonpath:json-path-assert:${jsonpathVersion}"
    testCompile "junit:junit:${junitVersion}"
    testCompile "org.mockito:mockito-core:${mockitoCoreVersion}"
	testCompile "com.h2database:h2:${h2DBVersion}"
}

task wrapper(type: Wrapper) {
    gradleVersion = '1.11'
}

tomcatRun {
    httpPort = 8080
}

tomcatRun.contextPath = ''